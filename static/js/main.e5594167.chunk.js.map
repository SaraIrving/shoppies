{"version":3,"sources":["logo.svg","components/SearchBox.jsx","images/grumpyCat.png","components/Alert.jsx","components/Header.jsx","components/Footer.jsx","components/Button.jsx","images/cryingCat.png","images/yelling.png","images/drakeNo.png","images/drakeYes.png","images/successKid.png","components/Movie.jsx","components/ResultsList.jsx","components/NominationsList.jsx","App.js","hooks/useAppData.js","reportWebVitals.js","index.js"],"names":["SearchBox","props","submitHandler","event","preventDefault","setState","prev","searchValue","state","enteredValue","className","onSubmit","name","placeholder","type","onChange","target","value","onKeyPress","keyCode","Alert","enableDragDrop","src","grumpyCat","onClick","buttonLabel","Movie","memeArray","drakeYes","successKid","cat","madLady","drakeNo","source","disable","movie","title","year","Button","draggableId","index","provided","draggableProps","dragHandleProps","ref","innerRef","listItemType","getResultsSubmitHandler","nominationsArray","resultsArray","map","movieObj","Title","Year","imdbID","disableProp","nomArray","length","determineButtonDisable","NominationsList","getNomSubmitHandler","key","nomCopy","slice","each","console","log","splice","droppableId","id","droppableProps","App","useState","useEffect","axios","get","then","response","results","data","Search","catch","error","useAppData","Header","checked","readOnly","for","ResultsList","onDragEnd","result","destination","items","Array","from","reorderedItem","Footer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5594167.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\n\n\nexport default function SearchBox(props) {\n\n  const changeHandler = (event) => {\n    props.setState(prev => ({...prev, enteredValue: event.target.value}))\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    // trigger api call now with final product that is pulled out of state\n    props.setState(prev => ({...prev, searchValue: props.state.enteredValue}))\n  };\n\n  const handleKeyPress = (event) => {\n     //it triggers by pressing the enter key\n     if (event.keyCode === 13) {\n      submitHandler();\n    }\n  };\n\n  return (\n    <div className=\"searchBox\">\n      <p>Type in movie title and hit Enter</p>\n      <form onSubmit={submitHandler}>\n        <label></label>\n        <input name=\"searchBox\" placeholder=\"Movie to search...\" type=\"text\" onChange={changeHandler} onKeyPress={handleKeyPress}></input>\n      </form>\n    </div>\n  );\n}","export default __webpack_public_path__ + \"static/media/grumpyCat.5fe918b2.png\";","import React from 'react';\nimport Bounce from 'react-reveal/Bounce';\nimport grumpyCat from '../images/grumpyCat.png'\n\n\nexport default function Alert (props) {\n\n  return(\n    <Bounce>\n      <div className=\"alert\">\n        {props.state.enableDragDrop && <img src={grumpyCat} className=\"memeImg\"/>}\n        <p>\n          Nominations list is full! <br></br> Remove the duds if you want to nominate some more\n        </p>\n        {props.state.enableDragDrop && <img src={grumpyCat} className=\"memeImg\"/>}\n      </div>\n    </Bounce>\n  );\n}","import React from 'react'\nimport Flash from 'react-reveal/Flash';\n\nexport default function (props) {\n\n  return (\n    <header>\n      <Flash><h2 className=\"title\">The Shoppie Awards</h2></Flash>\n      {props.state.enableDragDrop &&  <p>Search for your fav movies. Judge them with some help from your fav memes!</p>}\n      {!props.state.enableDragDrop &&  <p>Search for your fav movies. Judge them with only with buttons and not pop culture references!</p>}\n    </header>\n  );\n}","import React from 'react';\n\nexport default function () {\n\n  return (\n    <footer>\n      <p>\"The Shoppie Awards have been a really healthy outlet for my judgemental tendencies\" - Karen, Shoppie judge since 2021</p>\n    </footer>\n  );\n}","import React from 'react';\n\nexport default function (props) {\n  return (\n    <button className={props.className} onClick={props.onClick}>{props.buttonLabel}</button>\n  );\n}","export default __webpack_public_path__ + \"static/media/cryingCat.f07f41a3.png\";","export default __webpack_public_path__ + \"static/media/yelling.b8a1837c.png\";","export default __webpack_public_path__ + \"static/media/drakeNo.2b820dc3.png\";","export default __webpack_public_path__ + \"static/media/drakeYes.b93d5b00.png\";","export default __webpack_public_path__ + \"static/media/successKid.ad052a3e.png\";","import React from 'react';\nimport Button from './Button';\nimport { Draggable } from \"react-beautiful-dnd\";\nimport cat from '../images/cryingCat.png';\nimport madLady from '../images/yelling.png';\nimport drakeNo from '../images/drakeNo.png';\nimport drakeYes from '../images/drakeYes.png';\nimport successKid from '../images/successKid.png';\n\nexport default function Movie(props) {\n\n  const memeArray = [[drakeYes, \"First! That hotline will be blinging!\"], [successKid, \"Second! We're almost the best!\"], [cat, \"Third! Not bad, but some mixed feelings.\"], [madLady, \"Fourth!?! I'd like to speak to the manager!\"], [drakeNo, \"Fifth! Pshssh!\"]];\n\n  return (\n    <div>\n       {(props.state.enableDragDrop && props.source === \"results\") && <div>\n                                        {props.disable === true &&  <div className=\"movieWrapper\">\n                                                                      <div className=\"movieInfoWrapper\">\n                                                                        <p>{props.movie.title} ({props.movie.year})</p>\n                                                                      </div>\n                                                                        </div>}\n                                        {props.disable === false && <div className=\"movieWrapper\">\n                                                                      <div className=\"movieInfoWrapper\">\n                                                                        <p>{props.movie.title} ({props.movie.year})</p>\n                                                                        <form onSubmit={props.submitHandler}>\n                                                                          <Button buttonLabel={props.buttonLabel} className={props.className}></Button>\n                                                                        </form>\n                                                                      </div>\n                                                                    </div>}\n                                        </div>}\n\n      {(props.state.enableDragDrop && !props.source) &&  <Draggable key={props.draggableId} draggableId={props.draggableId} index={props.index}>\n        {(provided) => (\n          <div {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n          {props.disable === true &&  <div className=\"movieWrapper\">\n                                        <div className=\"movieInfoWrapper\"> \n                                          <p>{props.movie.title} ({props.movie.year})</p>\n                                        </div>\n                                          </div>}\n          {(props.disable === false && props.listItemType === \"nominations\") && <div className=\"movieWrapper\">\n                                        <div className=\"memeWrapper\">\n                                          <img src={memeArray[props.index][0]} className=\"memeImg\"/>\n                                          <p>{memeArray[props.index][1]}</p> \n                                        </div>\n                                        <div className=\"movieInfoWrapper\">\n                                          <p>{props.movie.title} ({props.movie.year})</p>\n                                          <form onSubmit={props.submitHandler}>\n                                            <Button buttonLabel={props.buttonLabel} className={props.className}></Button>\n                                          </form>\n                                        </div>\n                                      \n                                      </div>}\n          {(props.disable === false && props.listItemType === \"results\") && <div className=\"movieWrapper\">\n          <div className=\"movieInfoWrapper\">\n            <p>{props.movie.title} ({props.movie.year})</p>\n            <form onSubmit={props.submitHandler}>\n              <Button buttonLabel={props.buttonLabel} className={props.className}></Button>\n            </form>\n          </div>\n          </div>}\n      </div>\n        )}\n                                        \n                                      </Draggable>}\n\n      {!props.state.enableDragDrop && <div>\n                                        {props.disable === true &&  <div className=\"movieWrapper\">\n                                                                      <div className=\"movieInfoWrapper\">\n                                                                        <p>{props.movie.title} ({props.movie.year})</p>\n                                                                      </div>\n                                                                        </div>}\n                                        {props.disable === false && <div className=\"movieWrapper\">\n                                                                      <div className=\"movieInfoWrapper\">\n                                                                        <p>{props.movie.title} ({props.movie.year})</p>\n                                                                        <form onSubmit={props.submitHandler}>\n                                                                          <Button buttonLabel={props.buttonLabel} className={props.className}></Button>\n                                                                        </form>\n                                                                      </div>\n                                                                    </div>}\n                                        </div>}\n \n    </div>\n \n  );\n\n}","import React from 'react';\nimport Movie from './Movie';\n\nexport default function(props) {\n\n  // // submission handler for the form in the Movie component\n\n  const getResultsSubmitHandler = function(movie) {\n    return ((event) => {\n      event.preventDefault();\n     \n      //Add the movie in question to the nominationsArray in state\n      props.setState(prev => ({...prev, nominationsArray: [...prev.nominationsArray, movie]}))\n    });\n  }\n\n\n  // if a result is already in the nominations list, don't give it a Nominate button\n  const determineButtonDisable = function(nomArray, movieObj) {\n    if(nomArray.length >= 5) {\n      return true;\n    }\n\n    for (let nom of nomArray) {\n      if (nom.imdbID === movieObj.imdbID){\n        return true;\n      } \n    }\n    return false;\n  };\n\n\n  return (\n    <div className=\"resultsList\">\n      <h2>Search Results</h2>\n      <p className=\"resultsInstructions\">Click \"Nominate\" to add a movie to the list of contenders for a Shoppie Award!</p>\n      {props.state.resultsArray !== 0 && <div>\n      {props.state.resultsArray.map((movie, index) => {\n        const movieObj = {\n                        title: movie.Title,\n                        year: movie.Year,\n                        imdbID: movie.imdbID\n                        };\n\n        const disableProp = determineButtonDisable(props.state.nominationsArray, movieObj);\n\n        return(\n          <Movie source=\"results\" disable={disableProp} movie={movieObj} key={index} state={props.state} setState={props.setState} buttonLabel=\"Nominate\" submitHandler={getResultsSubmitHandler(movieObj)} className=\"resultButton\"></Movie>\n        );\n      })}\n    </div>}\n\n    </div> \n  );\n}","import React from 'react';\nimport Movie from './Movie';\nimport { Droppable } from \"react-beautiful-dnd\";\n\nexport default function NominationsList(props) {\n\n  // submission handler for the form in the Movie component\n  const getNomSubmitHandler = function(key){\n    return ((event) => {\n        event.preventDefault();\n        // remove the movie in question from the nominations array\n        \n        props.setState(prev => {\n          \n          const nomCopy = prev.nominationsArray.slice(0)\n          nomCopy.map(each => console.log(\"before-\", each.title))\n          \n          nomCopy.splice(key, 1);\n          \n          nomCopy.map(each => console.log(\"after -\", each.title))\n          return(\n            {...prev, nominationsArray: nomCopy}\n          )\n        })\n      }\n    )\n  };\n\n  return (\n    <div className=\"nominationsList\">\n      <h2>Shoppie Award Nominees</h2>\n        {props.state.enableDragDrop && <p className=\"nomsInstructions\">Drag and drop the nominees to reorder their ranking. Click \"Remove\" to bump them out of the running!</p>}\n        {!props.state.enableDragDrop && <p className=\"nomsInstructions\">Click \"Remove\" to bump a nominee out of the running!</p>}\n        {(props.state.nominationsArray.length !== 0 && props.state.enableDragDrop) && <Droppable droppableId={props.droppableId} id=\"nomListDnd\">\n        {(provided) => (\n          <div  {...provided.droppableProps} ref={provided.innerRef}>\n          {props.state.nominationsArray.map((movie, index) => {\n            return (\n              <Movie listItemType={props.listItemType} draggableId={movie.title + props.listItemType} index={index} disable={false} movie={movie} key={index} state={props.state} setState={props.setState} buttonLabel=\"Remove\" submitHandler={getNomSubmitHandler(index)} className=\"nomButton\"></Movie>\n            );\n          })}\n          {provided.placeholder}\n        </div>\n\n        )}\n        </Droppable>}\n        {(props.state.nominationsArray.length !== 0 && !props.state.enableDragDrop) && <div>\n          {props.state.nominationsArray.map((movie, index) => {\n            return (\n              <Movie disable={false} movie={movie} key={index} state={props.state} setState={props.setState} buttonLabel=\"Remove\" submitHandler={getNomSubmitHandler(index)} className=\"nomButton\"></Movie>\n            );\n          })}\n        </div>}\n\n    </div>\n  );\n}","import logo from './logo.svg';\nimport './App.css';\nimport SearchBox from './components/SearchBox';\nimport Alert from './components/Alert';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport useAppData from './hooks/useAppData';\nimport ResultsList from './components/ResultsList';\nimport NominationsList from './components/NominationsList';\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nfunction App() {\n\n  const { state, setState } = useAppData();\n\n\n  const handleOnDragEnd = function(result) {\n\n\n    //if you try to drag an element outside of the DragDropContext\n    if(!result.destination) {\n      console.log(\"Cant drop here!\")\n      return;\n    }\n\n    // drag movies within the nominations list\n    if (result.destination.droppableId === \"nominations\" && result.source.droppableId === \"nominations\") {\n      const items = Array.from(state.nominationsArray.slice(0));\n      const [reorderedItem] = items.splice(result.source.index, 1);\n      items.splice(result.destination.index, 0, reorderedItem);\n      setState(prev => {return {...prev, nominationsArray: items}})\n    }\n\n  };\n\n  return (\n    <div className=\"App\">\n      <Header state={state}></Header>\n      <div className=\"appBody\">\n        <SearchBox state={state} setState={setState}></SearchBox>\n        <div className=\"radioWrapper\">\n          <input id=\"dndRadio\" type=\"radio\" value=\"DNDRadio\" checked={!state.enableDragDrop} readOnly={true} onClick={event => setState(prev => ({...prev, enableDragDrop: !prev.enableDragDrop}))}></input>\n          <label for=\"dndRadio\">\n            <span className=\"radioSpan\">Enable \"meme free\" mode for a boring by the specifications app</span>\n          </label>\n        </div>\n        {state.nominationsArray.length >= 5 && <Alert state={state}></Alert>}\n\n\n        {!state.enableDragDrop && <div className=\"resultNomWrapper\">\n                                      <ResultsList state={state} setState={setState}></ResultsList>\n                                    \n                                      <NominationsList state={state} setState={setState}></NominationsList>\n                                  \n                                  </div>}\n        {state.enableDragDrop && <DragDropContext onDragEnd={handleOnDragEnd}>\n                                    <div className=\"resultNomWrapper\">\n                                    \n                                      <ResultsList state={state} setState={setState} droppableId=\"results\" listItemType=\"results\"></ResultsList>\n                \n                                      <NominationsList state={state} setState={setState} droppableId=\"nominations\" listItemType=\"nominations\"></NominationsList>\n                                    </div>\n                                  </DragDropContext>}\n    </div>\n    <Footer></Footer>\n    </div>\n   \n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nexport default function useAppData() {\n\n  const [state, setState] = useState({\n                                      enteredValue: 'initial',\n                                      searchValue: '',\n                                      resultsArray: [],\n                                      nominationsArray: [],\n                                      enableDragDrop: true\n                                    });\n\n  useEffect(() => {\n    axios.get(`https://www.omdbapi.com/?apikey=bb6449b7&type=movie&s=${state.searchValue}`)\n    .then((response) => {\n      //now use the data to set the results list in the state!\n\n      //isolate the first 5 responses\n      const results = response.data.Search.slice(0, 5)\n      setState(prev => ({...prev, resultsArray: results}));\n    })\n    .catch(error => console.log(error));\n\n  }, [state.searchValue])\n\n  return{\n    state,\n    setState\n  };\n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}